services:
  mysql:
    image: mysql:8.0.35
    container_name: ${DB_CONTAINER_NAME}
    restart: always
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - ./volumes/mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PWD}
      MYSQL_ROOT_PASSWORD: ${DB_PWD}
      MYSQL_INITDB_SKIP_TZINFO: just_do_it
      TZ: Asia/Shanghai
    command: 
      --character-set-server=${DB_CHARSET}
      --collation-server=${DB_COLLATION}
      --explicit_defaults_for_timestamp=true
      --lower_case_table_names=1
      --max_allowed_packet=128M
    networks:
      - backend_tier

  redis:
    image: redis:7.2.1
    container_name: ${REDIS_CONTAINER_NAME}
    volumes:
      - ./docker/redis/redis.conf:/etc/redis/redis.conf:ro
      - ./volumes/redis/:/data
    command: /bin/sh -c "echo 'vm.overcommit_memory = 1' >> /etc/sysctl && redis-server /etc/redis/redis.conf --appendonly yes --requirepass ${REDIS_PWD}"
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - backend_tier

  server:
    container_name: ${API_CONTAINER_NAME}
    build:
      context: ./
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "${RUNTIME_PORT}:${RUNTIME_PORT}"
    networks:
      - backend_tier
    command: python start.py
    depends_on:
      - mysql
      - redis

networks:
  backend_tier:
