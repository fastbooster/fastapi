---
globs: "*.py"
description: "FastAPI开发最佳实践和约定"
---

# FastAPI 最佳实践

## API 端点设计
- 使用复数名词作为资源名称 (`/users`, `/items`)
- 遵循 RESTful 约定：
  - GET `/users` - 获取用户列表
  - POST `/users` - 创建新用户
  - GET `/users/{id}` - 获取特定用户
  - PUT `/users/{id}` - 更新用户
  - DELETE `/users/{id}` - 删除用户

## 依赖注入
- 使用 `Depends()` 进行依赖注入
- 创建可重用的依赖函数
- 使用依赖进行身份验证、数据库连接等

## 响应模型
- 为每个端点定义响应模型
- 使用 `response_model` 参数
- 实现适当的状态码（200, 201, 404, 422 等）

## 中间件和CORS
- 配置 CORS 中间件用于跨域请求
- 添加请求日志中间件
- 实现认证中间件

## 异步操作
- 对于 I/O 密集型操作使用 `async def`
- 使用 `await` 调用异步函数
- 配置异步数据库连接

## 配置管理
- 使用环境变量管理配置
- 创建配置类使用 Pydantic BaseSettings
- 分离开发、测试、生产环境配置
