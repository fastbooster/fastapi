---
globs: "*.py"
description: "API安全和数据保护最佳实践"
---

# 安全最佳实践

## 认证和授权
- 使用 JWT 令牌进行身份验证
- 实现基于角色的访问控制 (RBAC)
- 设置令牌过期时间和刷新机制
- 使用 OAuth2 和 OpenID Connect 标准

## 密码安全
- 使用强密码哈希算法（bcrypt, Argon2）
- 实现密码复杂度要求
- 添加密码重试限制和账户锁定
- 支持多因子认证 (MFA)

## 数据验证和清理
- 验证所有输入数据
- 防止 SQL 注入攻击
- 使用参数化查询
- 清理用户输入防止 XSS

## API 安全
- 实现请求频率限制 (Rate Limiting)
- 使用 HTTPS/TLS 加密传输
- 设置适当的 CORS 策略
- 隐藏敏感错误信息

## 敏感数据处理
- 不在日志中记录敏感信息
- 使用环境变量存储机密
- 实现数据加密（静态和传输）
- 定期轮换 API 密钥和令牌

## 安全头设置
- 设置安全 HTTP 头部
- 实现 Content Security Policy (CSP)
- 使用 X-Frame-Options 防止点击劫持
- 配置 X-Content-Type-Options
