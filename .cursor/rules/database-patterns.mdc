---
globs: "*.py"
description: "数据库操作和ORM模式"
---

# 数据库操作模式

## SQLAlchemy 使用
- 使用 SQLAlchemy Core 或 ORM 进行数据库操作
- 定义明确的数据库模型
- 使用 Alembic 进行数据库迁移

## 连接管理
- 使用连接池管理数据库连接
- 在依赖注入中提供数据库会话
- 确保正确关闭数据库连接

## 查询优化
- 使用 `select_related` 和 `prefetch_related` 减少查询次数
- 添加适当的数据库索引
- 使用分页避免返回大量数据

## 事务管理
- 使用事务确保数据一致性
- 实现回滚机制
- 处理并发访问和锁定

## 数据验证
- 在数据库层面添加约束
- 使用 Pydantic 模型进行输入验证
- 实现数据清理和转换

## 迁移脚本
- 为每个数据库变更创建迁移脚本
- 测试迁移的前向和后向兼容性
- 备份数据库前执行迁移
